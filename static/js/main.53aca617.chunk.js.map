{"version":3,"sources":["firebase/fbConfig.js","Header/header.js","Posts/Post.js","Posts/Posts.js","Posts/ImageUpload.js","Auth pages/signinModal.js","Auth pages/signupModal.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","Header","setOpen","setOpenSignin","user","className","Button","onClick","signOut","Post","username","imgURL","caption","postId","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","src","alt","text","type","placeholder","value","onChange","e","target","disabled","event","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","Posts","user_posts","setUser_posts","id","post","key","ImageUpload","setCaption","image","setImage","progress","setProgress","max","files","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","message","child","getDownloadURL","then","url","SigninModal","modalStyle","useStyles","getModalStyle","openSignin","password","setUsername","setPassword","classes","email","setEmail","Modal","open","onClose","style","paper","signInWithEmailAndPassword","catch","alert","SignupModal","createUserWithEmailAndPassword","authUser","updateProfile","top","left","transform","makeStyles","theme","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","setUser","onAuthStateChanged","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53aca617.chunk.js","sourcesContent":["import firebase from \"firebase\"\n\n\n  const firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyDYhuLhHMX9wBaVGRZiEGCgeFR0HMFT1wY\",\n    authDomain: \"paul-react-instagram.firebaseapp.com\",\n    databaseURL: \"https://paul-react-instagram.firebaseio.com\",\n    projectId: \"paul-react-instagram\",\n    storageBucket: \"paul-react-instagram.appspot.com\",\n    messagingSenderId: \"939993072376\",\n    appId: \"1:939993072376:web:d508de1cadd54651ef710d\"\n  })\n\n\n  const db = firebase.firestore();\n  const auth = firebase.auth();\n  const storage = firebase.storage();\n\n  export { db, auth, storage};\n\n  ","import React from 'react'\nimport \"../css/header.css\"\nimport { Button } from \"@material-ui/core\"\nimport { auth } from \"../firebase/fbConfig\"\n\n\nfunction Header({setOpen, setOpenSignin, user}) {\n    \n\n    \n    return (\n        <div className=\"header-container\">\n            <h4>instagram</h4>\n            {user ? (\n        <Button onClick={() => auth.signOut()}>Logout</Button>\n      ):\n        (\n          <div className=\"login_container\">\n          <Button onClick={() => setOpenSignin(true)}>Sign In</Button>\n            <Button onClick={() => setOpen(true)}>Sign Up</Button>\n          </div>\n        )\n      }\n        </div>\n    )\n}\n\nexport default Header\n","import React, {useState, useEffect}  from 'react'\nimport firebase from \"firebase\"\nimport \"../css/post.css\"\nimport { db } from \"../firebase/fbConfig\"\nimport { Button, input } from \"@material-ui/core\"\n\n\nfunction Post({username, imgURL, caption, postId, user}) {\n    const [comments, setComments] = useState([])\n    const [comment, setComment] = useState(\"\")\n\n    useEffect(() =>{\n        let unsubscribe;\n        if(postId){\n            unsubscribe = db\n            .collection(\"user_posts\")\n            .doc(postId)\n            .collection(\"comments\")\n            .orderBy(\"timestamp\", \"desc\")\n            .onSnapshot((snapshot) => {\n                    setComments(snapshot.docs.map((doc) => doc.data()\n                ))\n\n            });\n        }\n        return () => {\n            unsubscribe();\n        }\n    }, [postId]);\n\n    const postComment =(event) => {\n        event.preventDefault();\n\n        db.collection(\"user_posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .add({\n            text: comment,\n            username: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n        setComment((\"\"));\n    }\n    return (\n        <div className=\"post-container\">\n            <div className=\"post-header\">\n                <div className=\"header-avatar\">R</div>\n                <div className=\"post-details\">\n                    <h3>{username}</h3>\n                    <h6>user location</h6>\n                </div>\n            </div>\n            <div className=\"post-image\">\n                <img  className=\"post-url\" src={imgURL} alt=\"paul\"/>                    \n            </div>\n            {/* <div className=\"post-reactions\">\n\n            </div> */}\n            <div className=\"post-caption\">\n                <h5><strong>{username}</strong>{caption}</h5>\n                <div className=\"post_comments\">\n                    {\n                        comments.map(comment => (\n                            <p>\n                                <strong>{comment.username}</strong>>{comment.text}\n                            </p>\n                        ))\n                    }\n                </div>\n                \n                <form className=\"post_comment\">\n                    <input type=\"text\"\n                            className=\"post_input\"\n                            placeholder=\"Add a comment...\"\n                            value={comment}\n                            onChange={(e) => setComment(e.target.value)}/>\n                            <Button className=\"post_btn\"\n                                    disabled={!comment}\n                                    type=\"submit\"\n                                    onClick={postComment}>Post</Button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Post\n","import React, { useState, useEffect } from 'react'\nimport Post from \"./Post\"\nimport { db } from \"../firebase/fbConfig\"\nimport \"../css/post.css\"\n\n\nfunction Posts(user) {\n\n    const [user_posts, setUser_posts] = useState([]);\n\n\n    useEffect(() => {\n        db.collection(\"user_posts\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot =>{\n          setUser_posts(snapshot.docs.map( doc => ({\n            id: doc.id,\n            post: doc.data()\n          })\n            ));\n        })\n      }, [])\n\n    return(\n        <div className=\"app_post\">\n            {\n                user_posts.map(({id, post}) => (\n                    <Post key={id} user={user} postId={id} username={post.username} imgURL={post.imgURL} caption={post.caption}/>\n                ))\n            }\n\n        </div>\n    )\n}\nexport default Posts\n","import React, { useState } from 'react'\nimport firebase from \"firebase\"\nimport \"../css/imageUpload.css\"\nimport { Button } from '@material-ui/core';\nimport { db, storage } from \"../firebase/fbConfig\"\nfunction ImageUpload( {username}) {\n    const [caption, setCaption] = useState(\"\")\n    const [image, setImage] =useState(\"\")\n    const [progress, setProgress] =useState(\"\")\n\n\n    const handleChange =(event) => {\n        // event.preventDefault();\n        if (event.target.files[0]){\n            setImage(event.target.files[0]);\n        }\n    }\n    const handleUpload = () => {\n        const uploadTask = storage.ref(`images/${image.name}`).put(image)\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                const progress = Math.round (\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                setProgress(progress);\n            },\n            (error) =>{\n                console.log(error.message)\n            },\n            () => {\n                storage\n                    .ref(\"images\")\n                    .child(image.name)\n                    .getDownloadURL()\n                    .then(url => {\n                        db.collection(\"user_posts\").add({\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                            caption: caption,\n                            imgURL: url,\n                            username: username\n                        });\n                        setProgress(\"\");\n                        setCaption(\"\")\n                        setImage(\"\")\n                    })\n            }\n        )\n    }\n    return (\n        <div className=\"image_upload\">\n            <progress className=\"progress\" value={progress} max=\"100\"/>\n            <input type=\"text\" placeholder=\"Enter a caption...\" \n                    onChange={event => setCaption(event.target.value)} \n                    value={caption}/>\n            <input type=\"file\" onChange={handleChange}/>\n            <Button className=\"imageupload_btn\" onClick={handleUpload}>\n                Upload</Button>\n        </div>\n    )\n}\n\nexport default ImageUpload\n","import React, { useState } from 'react'\nimport { auth } from \"../firebase/fbConfig\"\nimport Modal from '@material-ui/core/Modal';\nimport { Button, input } from \"@material-ui/core\"\n\n\n\nfunction SigninModal({ modalStyle, useStyles, getModalStyle, \n    setOpenSignin, openSignin, username, setUsername, password, setPassword}) {\n\n    const classes = useStyles();\n    const [email, setEmail] =useState(\"\")\n\n\n    const signIn = (e) => {\n        e.preventDefault();\n        auth\n        .signInWithEmailAndPassword(email, password)\n        .catch((error) => alert(error.message))\n    \n        setOpenSignin(false)\n      }\n    return (\n        <>\n            <Modal\n                open={openSignin}\n                onClose={() => setOpenSignin(false)}\n            >\n                <div style={modalStyle} className={classes.paper}>\n                <form className=\"app_signup\">\n                    <center>\n                        <h3>instagram</h3>\n                    </center>\n                    <input type=\"text\"\n                            placeholder=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}/>\n                    <input type=\"password\"\n                            placeholder=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}/>\n                    <Button onClick={signIn}>Sign In</Button>\n                </form>\n\n            </div>\n      </Modal>\n        </>\n    )\n}\n\nexport default SigninModal\n","import React, { useState} from 'react'\nimport { auth } from \"../firebase/fbConfig\"\nimport Modal from '@material-ui/core/Modal';\nimport { Button, input } from \"@material-ui/core\"\n\n\nfunction SignupModal({modalStyle, getModalStyle, useStyles, setOpen, \n    open, username, setUsername, password, setPassword}) {\n    \n    const classes = useStyles();\n    const [email, setEmail] =useState(\"\")\n    \n\n\n    const signUp =(e) => {\n        e.preventDefault();\n        auth\n        .createUserWithEmailAndPassword(email, password)\n        .then((authUser) => {\n          authUser.user.updateProfile({\n            displayName: username\n          })\n        })\n        .catch((error) => alert(error.message))\n    \n        setOpen(false)\n      }\n    return (\n        <>\n            <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n        <form className=\"app_signup\">\n          <center>\n            <h3>instagram</h3>\n          </center>\n            <input type=\"text\"\n                    placeholder=\"username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}/>\n            <input type=\"text\"\n                    placeholder=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}/>\n            <input type=\"password\"\n                    placeholder=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}/>\n            <Button onClick={signUp}>Sign Up</Button>\n        </form>\n\n    </div>\n      </Modal>\n        </>\n    )\n}\n\nexport default SignupModal\n","import React, { useState, useEffect} from 'react'\nimport { auth } from \"../src/firebase/fbConfig\"\nimport Header from \"../src/Header/header\"\nimport \"../src/App.css\"\nimport \"../src/css/header.css\"\nimport Posts from \"../src/Posts/Posts\"\nimport ImageUpload from \"../src/Posts/ImageUpload\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport SigninModal from \"../src/Auth pages/signinModal\"\nimport SignupModal from \"../src/Auth pages/signupModal\"\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const [open, setOpen] = useState(false)\n  const [modalStyle] = useState(getModalStyle);\n  const [email, setEmail] =useState(\"\")\n  const [password, setPassword] =useState(\"\")\n  const [username, setUsername] = useState(\"\")\n  const [user, setUser] = useState(null)\n  const [openSignin, setOpenSignin] = useState(false)\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser){\n        // user has logged in\n        console.log(authUser)\n        setUser(authUser);\n        if (authUser.displayName){\n          // dont update user\n        }\n        else {\n          // if user is just created update user\n          return authUser.updateProfile({\n            displayName: username\n          })\n        }\n      }else{\n        // user has logged out\n        setUser(null)\n      }\n    })\n\n    return () => {\n      // perform some cleanUp actions\n      unsubscribe();\n    }\n  }, [user, username])\n  \n  return (\n    <div className=\"app\">\n      <SigninModal\n                  email={email} password={password} setEmail={setEmail}\n                  getModalStyle={getModalStyle} modalStyle={modalStyle} \n                  useStyles={useStyles} setOpenSignin={setOpenSignin} \n                  openSignin={openSignin} username={username} setUsername={setUsername}\n                  password={password} setPassword={setPassword}/>\n      <SignupModal modalStyle={modalStyle} email={email} setEmail={setEmail}\n                  password={password} \n                  getModalStyle={getModalStyle} \n                  useStyles={useStyles} setOpen={setOpen} open={open}\n                  username={username} setUsername={setUsername}\n                  password={password} setPassword={setPassword}/>\n      <Header setOpenSignin={setOpenSignin} setOpen={setOpen} user={user}/> \n      <Posts user={user}/>\n\n{\n        user?.displayName ? (\n          <ImageUpload username={user.displayName}/>\n        ):\n        (\n          <h2>Sorry you need to login</h2>\n        )\n      }\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}